{"ast":null,"code":"var _jsxFileName = \"/Users/micintro/Desktop/CI Challenge/CI_Challenge2_Image2Text_NLP/Final Product/Prod_ocr-react-app/src/views/text-analysis-output/TextAnalysisOutput.js\";\nimport React from 'react';\nimport './TextAnalysisOutput.scss';\nimport LoadingOverlay from '../loading-overlay/LoadingOverlay';\n\nclass TextAnalysisOutput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedItem: 'original'\n    };\n    this.navItemClicked = this.navItemClicked.bind(this);\n  }\n\n  navItemClicked(item) {\n    this.setState({\n      selectedItem: item\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: ['text-analysis-output-container', !this.props.output ? 'hide' : ''].join(' '),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"controls-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: ['item', this.state.selectedItem === 'original' ? 'selected' : ''].join(' '),\n      onClick: () => this.navItemClicked('original'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    }, \"Original\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: ['item', this.state.selectedItem === 'summary' ? 'selected' : ''].join(' '),\n      onClick: () => this.navItemClicked('summary'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }, \"Summary\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: ['output-container', this.state.selectedItem !== 'original' ? 'hide' : ''].join(' '),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"output-text-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: ['sentiment-score-container', !this.props.output || !this.props.output.original || !this.props.output.original.sentiment ? 'hide' : ''].join(' '),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }\n    }, \"Sentiment Score:\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: ['score-value', this.props.output && this.props.output.original && this.props.output.original.sentiment && this.props.output.original.sentiment.label === 'POSITIVE' ? 'green' : 'red'].join(' '),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 59\n      }\n    }, this.props.output && this.props.output.original && this.props.output.original.sentiment ? this.props.output.original.sentiment.label + \" \" + (this.props.output.original.sentiment.score * 100).toFixed(2) : '')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    }, this.props.output && this.props.output.original ? this.props.output.original.text : ''), /*#__PURE__*/React.createElement(\"div\", {\n      className: ['loading-overlay-wrapper', this.props.output && this.props.output.original ? 'hide' : ''].join(' '),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(LoadingOverlay, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: ['output-container', this.state.selectedItem !== 'summary' ? 'hide' : ''].join(' '),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"output-text-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sentiment-score-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }\n    }, \"Sentiment Score:\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: ['score-value', this.props.output && this.props.output.summary && this.props.output.summary.sentiment.label === 'POSITIVE' ? 'green' : 'red'].join(' '),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 59\n      }\n    }, this.props.output && this.props.output.summary ? this.props.output.summary.sentiment.label + \" \" + (this.props.output.summary.sentiment.score * 100).toFixed(2) : '')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-container summary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }, this.props.output && this.props.output.summary ? this.props.output.summary.text : ''), /*#__PURE__*/React.createElement(\"div\", {\n      className: ['loading-overlay-wrapper', this.props.output && this.props.output.summary ? 'hide' : ''].join(' '),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(LoadingOverlay, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n}\n\nexport default TextAnalysisOutput;","map":{"version":3,"sources":["/Users/micintro/Desktop/CI Challenge/CI_Challenge2_Image2Text_NLP/Final Product/Prod_ocr-react-app/src/views/text-analysis-output/TextAnalysisOutput.js"],"names":["React","LoadingOverlay","TextAnalysisOutput","Component","constructor","props","state","selectedItem","navItemClicked","bind","item","setState","render","output","join","original","sentiment","label","score","toFixed","text","summary"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './TextAnalysisOutput.scss';\nimport LoadingOverlay from '../loading-overlay/LoadingOverlay';\n\nclass TextAnalysisOutput extends React.Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n            selectedItem: 'original'\n        }\n\n        this.navItemClicked = this.navItemClicked.bind(this);\n    }\n    \n    navItemClicked(item) {\n\n        this.setState({\n            selectedItem: item\n        })\n    }\n\n    render() {\n        \n        return (\n\n            <div className={['text-analysis-output-container', !this.props.output ? 'hide' : ''].join(' ')}> \n                \n                <div className=\"controls-container\">\n                    <div className={['item', this.state.selectedItem === 'original' ? 'selected' : ''].join(' ')} onClick={() => this.navItemClicked('original')}>Original</div>\n                    <div className={['item', this.state.selectedItem === 'summary' ? 'selected' : ''].join(' ')} onClick={() => this.navItemClicked('summary')}>Summary</div>\n                </div>\n\n                <div className={['output-container', this.state.selectedItem !== 'original' ? 'hide' : ''].join(' ')}>\n\n                    <div className=\"output-text-wrapper\">\n\n                        <div className={['sentiment-score-container',  !this.props.output || !this.props.output.original || !this.props.output.original.sentiment ? 'hide' : ''].join(' ')}>\n                            <span>Sentiment Score:</span> <span className={['score-value', this.props.output && this.props.output.original &&  this.props.output.original.sentiment &&  this.props.output.original.sentiment.label === 'POSITIVE' ? 'green' : 'red'].join(' ')}>{this.props.output && this.props.output.original && this.props.output.original.sentiment ? this.props.output.original.sentiment.label + \" \" + (this.props.output.original.sentiment.score * 100).toFixed(2) : ''}</span>\n                        </div>\n\n                        <div className=\"text-container\">\n                            {this.props.output && this.props.output.original ? this.props.output.original.text : ''}\n                        </div>\n\n                        <div className={['loading-overlay-wrapper', this.props.output && this.props.output.original ? 'hide' : ''].join(' ')}>\n                            <LoadingOverlay />\n                        </div>\n                    </div>\n                </div>\n\n                <div className={['output-container', this.state.selectedItem !== 'summary' ? 'hide' : ''].join(' ')}>\n\n                    <div className=\"output-text-wrapper\">\n\n                        <div className=\"sentiment-score-container\">\n                            <span>Sentiment Score:</span> <span className={['score-value', this.props.output && this.props.output.summary &&  this.props.output.summary.sentiment.label === 'POSITIVE' ? 'green' : 'red'].join(' ')}>{this.props.output && this.props.output.summary ? this.props.output.summary.sentiment.label + \" \" + (this.props.output.summary.sentiment.score * 100).toFixed(2) : ''}</span>\n                        </div>\n\n                        <div className=\"text-container summary\">\n                            {this.props.output && this.props.output.summary ? this.props.output.summary.text : ''}\n                        </div>\n\n                        <div className={['loading-overlay-wrapper', this.props.output && this.props.output.summary ? 'hide' : ''].join(' ')}>\n                            <LoadingOverlay />\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n        );\n    }\n\n}\n\nexport default TextAnalysisOutput;"]},"metadata":{},"sourceType":"module"}