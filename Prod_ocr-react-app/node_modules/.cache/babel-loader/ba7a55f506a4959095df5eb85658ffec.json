{"ast":null,"code":"var _jsxFileName = \"/Users/micintro/Desktop/CI Challenge/CI_Challenge2_Image2Text_NLP/Final Product/Prod_ocr-react-app/src/pages/text-analysis/TextAnalysis.js\";\nimport React from 'react';\nimport './TextAnalysis.scss';\nimport UploadService from '../../services/Upload';\nimport TextAnalysisOutput from '../../views/text-analysis-output/TextAnalysisOutput';\n\nclass TextAnalysis extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      uploadService: new UploadService(),\n      textInput: null,\n      textOutput: null\n    };\n    this.analyzeClicked = this.analyzeClicked.bind(this);\n    this.updateTextInputValue = this.updateTextInputValue.bind(this);\n  }\n\n  async analyzeClicked() {\n    this.setState({\n      textOutput: {}\n    });\n    let summaryRes = await this.state.uploadService.summaryAnalysis(this.state.textInput);\n    let summarySentiment = await this.state.uploadService.sentimentAnalysis(summaryRes.summary);\n    let originalSentiment = await this.state.uploadService.sentimentAnalysis(this.state.textInput);\n    this.setState({\n      textOutput: {\n        summary: {\n          text: summaryRes.summary,\n          sentiment: summarySentiment.scores[0]\n        },\n        original: {\n          text: this.state.textInput,\n          sentiment: originalSentiment.scores[0]\n        }\n      }\n    });\n  }\n\n  updateTextInputValue(event) {\n    this.setState({\n      textInput: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-analysis-page-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-analysis-page-content-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-input-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      placeholder: \"Enter the text you would like to be summarized and analyzed for sentiment...\",\n      className: \"text-input\",\n      value: this.state.textInput,\n      onChange: this.updateTextInputValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.analyzeClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }\n    }, \"Analyze Text\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-output-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TextAnalysisOutput, {\n      output: this.state.textOutput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default TextAnalysis;","map":{"version":3,"sources":["/Users/micintro/Desktop/CI Challenge/CI_Challenge2_Image2Text_NLP/Final Product/Prod_ocr-react-app/src/pages/text-analysis/TextAnalysis.js"],"names":["React","UploadService","TextAnalysisOutput","TextAnalysis","Component","constructor","props","state","uploadService","textInput","textOutput","analyzeClicked","bind","updateTextInputValue","setState","summaryRes","summaryAnalysis","summarySentiment","sentimentAnalysis","summary","originalSentiment","text","sentiment","scores","original","event","target","value","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,kBAAP,MAA+B,qDAA/B;;AAEA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AAEvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAEf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,aAAa,EAAE,IAAIP,aAAJ,EADN;AAETQ,MAAAA,SAAS,EAAE,IAFF;AAGTC,MAAAA,UAAU,EAAE;AAHH,KAAb;AAMA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BD,IAA1B,CAA+B,IAA/B,CAA5B;AACH;;AAED,QAAMD,cAAN,GAAuB;AAEnB,SAAKG,QAAL,CAAc;AACVJ,MAAAA,UAAU,EAAE;AADF,KAAd;AAIA,QAAIK,UAAU,GAAG,MAAM,KAAKR,KAAL,CAAWC,aAAX,CAAyBQ,eAAzB,CAAyC,KAAKT,KAAL,CAAWE,SAApD,CAAvB;AACA,QAAIQ,gBAAgB,GAAG,MAAM,KAAKV,KAAL,CAAWC,aAAX,CAAyBU,iBAAzB,CAA2CH,UAAU,CAACI,OAAtD,CAA7B;AACA,QAAIC,iBAAiB,GAAG,MAAM,KAAKb,KAAL,CAAWC,aAAX,CAAyBU,iBAAzB,CAA2C,KAAKX,KAAL,CAAWE,SAAtD,CAA9B;AAEA,SAAKK,QAAL,CAAc;AACVJ,MAAAA,UAAU,EAAE;AACRS,QAAAA,OAAO,EAAE;AACLE,UAAAA,IAAI,EAAEN,UAAU,CAACI,OADZ;AAELG,UAAAA,SAAS,EAAEL,gBAAgB,CAACM,MAAjB,CAAwB,CAAxB;AAFN,SADD;AAKRC,QAAAA,QAAQ,EAAE;AACNH,UAAAA,IAAI,EAAE,KAAKd,KAAL,CAAWE,SADX;AAENa,UAAAA,SAAS,EAAEF,iBAAiB,CAACG,MAAlB,CAAyB,CAAzB;AAFL;AALF;AADF,KAAd;AAYH;;AAEDV,EAAAA,oBAAoB,CAACY,KAAD,EAAQ;AAExB,SAAKX,QAAL,CAAc;AACVL,MAAAA,SAAS,EAAEgB,KAAK,CAACC,MAAN,CAAaC;AADd,KAAd;AAGH;;AAEDC,EAAAA,MAAM,GAAG;AAEL,wBAEI;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAK,MAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAU,MAAA,WAAW,EAAC,8EAAtB;AAAqG,MAAA,SAAS,EAAC,YAA/G;AAA4H,MAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWE,SAA9I;AAAyJ,MAAA,QAAQ,EAAE,KAAKI,oBAAxK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAII;AAAQ,MAAA,OAAO,EAAE,KAAKF,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,CAFJ,eASI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,kBAAD;AAAoB,MAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWG,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CATJ,CAFJ,CAFJ;AAmBH;;AApEsC;;AAuE3C,eAAeP,YAAf","sourcesContent":["import React from 'react';\nimport './TextAnalysis.scss';\nimport UploadService from '../../services/Upload';\nimport TextAnalysisOutput from '../../views/text-analysis-output/TextAnalysisOutput';\n\nclass TextAnalysis extends React.Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n            uploadService: new UploadService(),\n            textInput: null,\n            textOutput: null\n        }\n\n        this.analyzeClicked = this.analyzeClicked.bind(this);\n        this.updateTextInputValue = this.updateTextInputValue.bind(this);\n    }\n\n    async analyzeClicked() {\n\n        this.setState({\n            textOutput: {}\n        })\n\n        let summaryRes = await this.state.uploadService.summaryAnalysis(this.state.textInput);\n        let summarySentiment = await this.state.uploadService.sentimentAnalysis(summaryRes.summary);\n        let originalSentiment = await this.state.uploadService.sentimentAnalysis(this.state.textInput);\n\n        this.setState({\n            textOutput: {\n                summary: {\n                    text: summaryRes.summary,\n                    sentiment: summarySentiment.scores[0]\n                },\n                original: {\n                    text: this.state.textInput,\n                    sentiment: originalSentiment.scores[0]\n                }\n            }\n        })\n    }\n\n    updateTextInputValue(event) {\n\n        this.setState({\n            textInput: event.target.value\n        })\n    }\n\n    render() { \n        \n        return (\n\n            <div className=\"text-analysis-page-container\">\n\n                <div className=\"text-analysis-page-content-container\">\n\n                    <div className=\"text-input-container\">\n\n                        <textarea placeholder=\"Enter the text you would like to be summarized and analyzed for sentiment...\" className=\"text-input\" value={this.state.textInput} onChange={this.updateTextInputValue}></textarea>\n\n                        <button onClick={this.analyzeClicked}>Analyze Text</button>\n                    </div>\n\n                    <div className=\"text-output-container\">\n                        <TextAnalysisOutput output={this.state.textOutput} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TextAnalysis;"]},"metadata":{},"sourceType":"module"}